//
// NAV COMPONENT
//
// Universal nav styling for a variety of different navigation elements such as a nav list, inline nav or navbar.
//
// DEPENDENCIES </br>
// - none
//
// EXTENDS </br>
// - %button
// - %button--primary
//
// VARIABLES </br>
// -
//
// .Nav-list			- Nav List
// .Nav-listInline		- Inline List
//
// Markup:
//<nav>
//		<ul class="Nav {$modifiers}">
			//<li class="Nav-item"><a href="#">Default nav item styling</a></li>
			//<li class="Nav-item"><a href="">Nav item</a></li>
			//<li class="Nav-item"><a href="">Another one</a></li>
//		</ul>
//	</nav>
//
// Styleguide 27.1.0.



// --------------------------------------------------------------------------
// VARIABLES
// --------------------------------------------------------------------------

$c-nav-fontSize: $FontSize-small !default;
$c-nav-fontWeight: $FontWeight-bold !default;
$c-nav-textTransform: uppercase !default;

$c-nav-textDecoration: none !default;
$c-nav-textDecoration--hover: underline !default;
$c-nav-textColour--hover: false !default;

$c-navList-flushSide: true !default;

$navLink-display: inline-block !default;
$navLink-paddingVertical: ($Leading * 2) !default;
$navLink-paddingHorizonal: ($Leading * 2.5) !default;

$navBar-padding: ($Leading * 2) ($Leading * 4) !default;
$c-navBar-maxWidth: false !default;
$c-navBar-fontSize: $FontSize-b !default;
$c-navBar-marginRight: $Leading * 3 !default;
$c-navBar-verticalAlign: middle !default;
$c-navBar-brandFontSize: $FontSize-h3 !default;
$c-navBar-brandColour: $Colour-base !default;
$c-navBar-itemColour: false !default;

$c-navBar-brandImageSrc: false !default;
$c-navBar-brandImageSrcBackup: false !default;
$c-navBar-brandImagePortrait: false !default;
$navBar-brandImageRepeat: no-repeat !default;
$navBar-brandImagePosition: left center !default;
$c-navBar-brandImageWidth: false !default;
$c-navBar-brandImageHeight: false !default;
$c-navBar-background: false !default;
$c-navBar-borderTop: false !default;
$c-navBar-borderRight: false !default;
$c-navBar-borderBottom: false !default;
$c-navBar-borderLeft: false !default;

$navBar-breakpoint: 1120px !default;



// --------------------------------------------------------------------------
// FUNCTIONS
// --------------------------------------------------------------------------



// --------------------------------------------------------------------------
// MIXINS
// --------------------------------------------------------------------------



// --------------------------------------------------------------------------
// EXTENDABLES
// --------------------------------------------------------------------------



// --------------------------------------------------------------------------
// STYLING
// --------------------------------------------------------------------------

/*
 * Default nav styling
 */

@if $use-component-nav == true {
	
	/*
	 * Default Nav styling
	 */

	.Nav {
		@extend %list-noBullet;

		@include conditional( $c-nav-fontSize ) { @include font-size($c-nav-fontSize) };
		@include conditional( $c-nav-fontWeight ) { font-weight: $c-nav-fontWeight };
		@include conditional( $c-nav-textTransform ) { text-transform: $c-nav-textTransform };

		a {
			display: $navLink-display;
			padding: $navLink-paddingVertical $navLink-paddingHorizonal;

			@include conditional( $c-nav-textDecoration ) { 
				text-decoration: $c-nav-textDecoration;

				&:hover,
				&:focus {
					text-decoration: $c-nav-textDecoration--hover;
					@include conditional( $c-nav-textColour--hover ) { color: $c-nav-textColour--hover };
				}
			}
		}
	}



	/*
	 * Nav list styling
	 */

	@if $use-component-navList == true {
		.Nav-list {
			@include conditional( $c-navList-flushSide ) { margin-left: -($navLink-paddingHorizonal) };
		}
	}



	/*
	 * Nav list horizontal styling
	 */

	@if $use-component-navList--inline == true {
		
		.Nav-listInline {
			@include conditional( $c-navList-flushSide ) { margin-left: -($navLink-paddingHorizonal) };

			li {
				display: inline-block;
			}
		}

	}



	/*
	 * Nav bar styling
	 */

	// Markup:
	//<nav>
	//		<input type="checkbox" id="Nav-itemToggle" class="Nav-itemToggleCheck">
	//		<ul class="Nav Nav-bar">
				//<li class="Nav-item Nav-itemBrand"><a href="#">Stacks</a></li>
				//<li class="Nav-item"><a href="#">Item styling</a></li>
				//<li class="Nav-item"><a href="">Nav item</a></li>
				//<li class="Nav-item"><a href="">Another one</a></li>
				//<li class="Nav-item"><a href="" class="button">Button</a></li>
				//<li class="Nav-item Nav-itemToggle">
					//<label for="Nav-itemToggle" class="Nav-itemToggleLabel">Menu</label>
				//</li>
	//		</ul>
	//	</nav>
	//
	// Styleguide 27.1.1.

	@if $use-component-navBar == true {

		.Nav-bar {
			position: relative;
			padding: $navBar-padding;
			margin: 0;
			
			@include conditional( $c-navBar-background ) { background: $c-navBar-background };
			@include conditional( $c-navBar-borderTop ) { border-top: $c-navBar-borderTop };
			@include conditional( $c-navBar-borderRight ) { border-right: $c-navBar-borderRight };
			@include conditional( $c-navBar-borderBottom ) { border-bottom: $c-navBar-borderBottom };
			@include conditional( $c-navBar-borderLeft ) { border-left: $c-navBar-borderLeft };

			li {
				display: inline-block;
				@include conditional( $c-navBar-verticalAlign ) { vertical-align: $c-navBar-verticalAlign };
			}

			a {
				@include conditional( $c-navBar-fontSize ) { @include font-size($c-navBar-fontSize) };
				@include conditional( $c-navBar-itemColour ) { color: $c-navBar-itemColour };
			}

			.Nav-item {
				@include conditional( $c-navBar-marginRight ) { margin-right: $c-navBar-marginRight };

				display: none;

				@include respond-to($navBar-breakpoint) {
					display: inline-block;
					@include conditional( $c-navBar-verticalAlign ) { vertical-align: $c-navBar-verticalAlign };
				}
			}

		}

		

		.Nav-itemBrand {
			display: inline-block;
			@include conditional( $c-navBar-verticalAlign ) { vertical-align: $c-navBar-verticalAlign };

			@include conditional( $c-navBar-brandImageSrc ) {
				@include conditional( $c-navBar-brandImageSrcBackup ) { background-image: url($c-navBar-brandImageSrcBackup) };
				background-image: url($c-navBar-brandImageSrc);
				background-repeat: $navBar-brandImageRepeat;
				background-position: $navBar-brandImagePosition;
				text-indent: -9999px;
				
				@if ($c-navBar-brandImagePortrait == true) {
					background-size: auto 100%;
				} @else {
					background-size: 100% auto;
				}				

				@include conditional( $c-navBar-brandImageWidth ) { width: $c-navBar-brandImageWidth; };
				@include conditional( $c-navBar-brandImageHeight ) { height: $c-navBar-brandImageHeight; };

			};
			
			a {
				@include conditional( $c-navBar-brandFontSize ) { @include font-size($c-navBar-brandFontSize) };
				@include conditional( $c-navBar-brandColour ) { color: $c-navBar-brandColour };
			}
		}

		.Nav-itemToggle {
			display: block;
			position: absolute;
			top: $Leading * 4;
			right: $Leading * 4;
			margin-right: 0;
		}

		

		.Nav-itemToggleCheck {
			display: none;

			&:checked {
				+ .Nav-bar .Nav-item {
					display: block;

					&.Nav-itemToggle:before {
						content: 'Ã—';
						position: absolute;
						left: $Leading * 3;
						top: 50%;
						margin-top: - $Leading * 1.7;
					}

					.Nav-itemToggleLabel {
						padding-left: 2.75em;
						padding-right: 1.75em;
					}
				}
			}
		}

		.Nav-itemToggleLabel {
			display: inline-block;
			@extend %button;
			@include conditional( $c-navBar-fontSize ) { @include font-size($c-navBar-fontSize) };

			@include respond-to($navBar-breakpoint) {
				display: none;
			}
		}

	}



	 /*
	 * Nav tabs styling
	 */

	@if $use-component-navTabs == true {

	}
}